## Autogenerated by Scribe. DO NOT MODIFY.

name: Пользователи
description: 'API для взаимодействия с профилями пользователей'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Пользователи
      groupDescription: 'API для взаимодействия с профилями пользователей'
      subgroup: ''
      subgroupDescription: ''
      title: 'Список пользователей'
      description: 'Отобразить список зарегистрированных пользователей'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user/detail/{user_id}'
    metadata:
      groupName: Пользователи
      groupDescription: 'API для взаимодействия с профилями пользователей'
      subgroup: ''
      subgroupDescription: ''
      title: 'Профиль пользователя'
      description: 'Отобразить профиль пользователя'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/update
    metadata:
      groupName: Пользователи
      groupDescription: 'API для взаимодействия с профилями пользователей'
      subgroup: ''
      subgroupDescription: ''
      title: 'Редактирование профиля'
      description: 'Редактирование профиля авторизированного пользователя'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters. Must be at least 1 character.'
        required: false
        example: iicrrgakhuujiqdeyvhwabmhwsultdxeitqrhmyagvfpufhcbjtsyubzndwmgusbjsktnmgkqcwkdffqgxgglbf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters. Must be at least 3 characters.'
        required: false
        example: ola.keebler@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: 'Must be at least 3 characters. Must not be greater than 14 characters.'
        required: false
        example: alxy
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must not be greater than 255 characters. Must be at least 6 characters.'
        required: false
        example: '_F=HG?('
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      birthday:
        name: birthday
        description: 'Must be a valid date.'
        required: false
        example: '2024-05-30T08:07:16'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: false
        example: female
        type: string
        enumValues:
          - male
          - female
        exampleWasSpecified: false
        custom: []
      about:
        name: about
        description: ''
        required: false
        example: commodi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      is_notifiable:
        name: is_notifiable
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      location_id:
        name: location_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: iicrrgakhuujiqdeyvhwabmhwsultdxeitqrhmyagvfpufhcbjtsyubzndwmgusbjsktnmgkqcwkdffqgxgglbf
      email: ola.keebler@example.com
      phone: alxy
      password: '_F=HG?('
      birthday: '2024-05-30T08:07:16'
      gender: female
      about: commodi
      is_notifiable: false
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
